version: "3"

services:
  app:
    container_name: trela_delivery_api_container
    build:
      dockerfile: Dockerfile.dev
      context: .
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_APP=${FLASK_APP}
      - DB_SERVER_URL=${DB_SERVER_URL}
      - MQ_EXCHANGE=${MQ_EXCHANGE}
      - MQ_URL=${MQ_URL}
      - G_CLOUD_API_KEY=${G_CLOUD_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db
    ports:
      - "5000:5000"
      - "5678:5678"
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - delivery-api-network

  db:
    container_name: trela_delivery_postgres_container
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - delivery-api-network

  rabbit: # user and password are guest
    container_name: trela_delivery_rabbit
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "8080:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=mqadmin
      - RABBITMQ_DEFAULT_PASS=mqadmin
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - delivery-api-network

networks:
  delivery-api-network:
    driver: bridge

volumes:
  db:
  app:
  rabbit:
