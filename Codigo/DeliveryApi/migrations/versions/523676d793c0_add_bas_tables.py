"""add bas tables

Revision ID: 523676d793c0
Revises: 
Create Date: 2022-02-12 18:58:44.982103

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '523676d793c0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('delivery_addresses',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('city_name', sa.String(length=40), nullable=True),
    sa.Column('country_state', sa.String(length=2), nullable=True),
    sa.Column('street_name', sa.String(length=100), nullable=True),
    sa.Column('street_number', sa.String(length=50), nullable=True),
    sa.Column('unit_number', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(length=50), nullable=True),
    sa.Column('neighborhood_name', sa.String(length=100), nullable=True),
    sa.Column('lat', sa.Float(precision=10, asdecimal=8), nullable=True),
    sa.Column('lng', sa.Float(precision=11, asdecimal=8), nullable=True),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('delivery_suppliers',
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('legal_id', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('supplier_id')
    )
    op.create_table('delivery_deliveries',
    sa.Column('delivery_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('offer_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('access_code', sa.String(length=6), nullable=False),
    sa.Column('report_sent', sa.Boolean(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['delivery_suppliers.supplier_id'], ),
    sa.PrimaryKeyConstraint('delivery_id')
    )
    op.create_table('delivery_deliverers',
    sa.Column('deliverer_id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('delivery_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['delivery_id'], ['delivery_deliveries.delivery_id'], ),
    sa.PrimaryKeyConstraint('deliverer_id')
    )
    op.create_table('delivery_delivery_routes',
    sa.Column('delivery_route_id', sa.Integer(), nullable=False),
    sa.Column('estimate_time', sa.Time(), nullable=False),
    sa.Column('delivery_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['delivery_id'], ['delivery_deliveries.delivery_id'], ),
    sa.PrimaryKeyConstraint('delivery_route_id')
    )
    op.create_table('delivery_orders',
    sa.Column('order_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('buyer_name', sa.String(length=100), nullable=False),
    sa.Column('delivered', sa.Boolean(), nullable=True),
    sa.Column('shipping_address_id', sa.Integer(), nullable=False),
    sa.Column('delivery_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['delivery_id'], ['delivery_deliveries.delivery_id'], ),
    sa.ForeignKeyConstraint(['shipping_address_id'], ['delivery_addresses.address_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('delivery_delivery_route_addresses',
    sa.Column('delivery_route_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['delivery_addresses.address_id'], ),
    sa.ForeignKeyConstraint(['delivery_route_id'], ['delivery_delivery_routes.delivery_route_id'], ),
    sa.PrimaryKeyConstraint('delivery_route_id', 'address_id')
    )
    op.create_table('delivery_order_problems',
    sa.Column('order_problem_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=30), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('order_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['delivery_orders.order_id'], ),
    sa.PrimaryKeyConstraint('order_problem_id')
    )
    op.create_table('delivery_order_products',
    sa.Column('order_product_id', sa.Integer(), nullable=False),
    sa.Column('product_sku', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('order_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['delivery_orders.order_id'], ),
    sa.PrimaryKeyConstraint('order_product_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('delivery_order_products')
    op.drop_table('delivery_order_problems')
    op.drop_table('delivery_delivery_route_addresses')
    op.drop_table('delivery_orders')
    op.drop_table('delivery_delivery_routes')
    op.drop_table('delivery_deliverers')
    op.drop_table('delivery_deliveries')
    op.drop_table('delivery_suppliers')
    op.drop_table('delivery_addresses')
    # ### end Alembic commands ###
